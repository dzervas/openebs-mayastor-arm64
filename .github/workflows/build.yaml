name: Build Multi-Arch Docker Images

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        default: "v2.9.1"
        description: The https://github.com/openebs/mayastor-extensions git tag to pull & build

jobs:
  build:
    permissions:
      packages: write
    strategy:
      matrix:
        runner:
          - ubuntu-24.04
          - ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    outputs:
      images: ${{ steps.get-images.outputs.images }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: openebs/mayastor-extensions
          ref: ${{ inputs.tag }}
          submodules: 'recursive'
          fetch-depth: 0
      - run: |
          # BUG: HEAD tag is fetched as lightweight instead of annotated
          # https://github.com/actions/checkout/issues/290
          if [ "${{ github.ref_type }}" == "tag" ]; then
            git fetch -f origin ${{ github.ref }}:${{ github.ref }}
          fi

      - uses: cachix/install-nix-action@v31.3.0
      - name: Build and push the release images
        run: ./scripts/release.sh --skip-publish

      - name: Save images
        run: |
          images=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep -v "<none>" | head -10 | sort -u)
          mkdir -p openebs
          for image in $images; do
            echo "Exporting image '$image'"
            docker save $image -o ${image//:}.tar
          done

      - uses: actions/upload-artifact@v4
        with:
          name: images-${{ matrix.runner }}
          path: |
            ./*.tar
            ./openebs/*.tar

  push-multiarch:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Do not define a name to download everything
      - uses: actions/download-artifact@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Import built images
        run: |
          for image in $(ls *.tar openebs/*.tar); do
            docker import $image
          done

      - name: Tag & Push produced images
        run: |
          images=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep -v "<none>" | head -10 | sort -u)
          for image in $images; do
            [[ -z "$image" ]] && continue
            new_tag="ghcr.io/${{ github.repository_owner }}/$image"
            echo "Pushing image '$image' to '$new_tag'"
            docker tag $image $new_tag
            docker push $new_tag
            echo "Pushed '$new_tag'"
          done
